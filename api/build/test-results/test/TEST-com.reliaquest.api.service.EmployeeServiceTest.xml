<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Employee Service Tests" tests="9" skipped="0" failures="0" errors="0" timestamp="2025-06-09T06:57:34" hostname="L1955.local" time="0.032">
  <properties/>
  <testcase name="Delete Employee By ID - When Employee Does Not Exist - Should Throw Exception" classname="com.reliaquest.api.service.EmployeeServiceTest" time="0.021"/>
  <testcase name="Get Employee By ID - When Employee Does Not Exist - Should Throw Exception" classname="com.reliaquest.api.service.EmployeeServiceTest" time="0.001"/>
  <testcase name="Get All Employees - Should Return All Employees" classname="com.reliaquest.api.service.EmployeeServiceTest" time="0.0"/>
  <testcase name="Get Highest Salary of Employees - Should Return Highest Salary" classname="com.reliaquest.api.service.EmployeeServiceTest" time="0.002"/>
  <testcase name="Get Top Ten Highest Earning Employee Names - Should Return Sorted Names" classname="com.reliaquest.api.service.EmployeeServiceTest" time="0.001"/>
  <testcase name="Get Employee By ID - When Employee Exists - Should Return Employee" classname="com.reliaquest.api.service.EmployeeServiceTest" time="0.001"/>
  <testcase name="Get Employees By Name Search - Should Filter By Name" classname="com.reliaquest.api.service.EmployeeServiceTest" time="0.002"/>
  <testcase name="Delete Employee By ID - When Successful - Should Return Deleted ID" classname="com.reliaquest.api.service.EmployeeServiceTest" time="0.002"/>
  <testcase name="Create Employee - Should Create and Return New Employee" classname="com.reliaquest.api.service.EmployeeServiceTest" time="0.001"/>
  <system-out><![CDATA[2025-06-09 12:27:34.532 [Test worker] INFO  c.r.api.service.EmployeeService - Deleting employee with ID: 862ffa8d-6b0f-4b9e-bede-acf4a67bdeb9
2025-06-09 12:27:34.532 [Test worker] INFO  c.r.api.service.EmployeeService - Retrieving employee with ID: 862ffa8d-6b0f-4b9e-bede-acf4a67bdeb9
2025-06-09 12:27:34.532 [Test worker] ERROR c.r.api.service.EmployeeService - Employee not found with ID: 862ffa8d-6b0f-4b9e-bede-acf4a67bdeb9
2025-06-09 12:27:34.534 [Test worker] INFO  c.r.api.service.EmployeeService - Retrieving employee with ID: e06fdae0-0870-4c2c-bef4-29267a2bd279
2025-06-09 12:27:34.534 [Test worker] ERROR c.r.api.service.EmployeeService - Employee not found with ID: e06fdae0-0870-4c2c-bef4-29267a2bd279
2025-06-09 12:27:34.535 [Test worker] INFO  c.r.api.service.EmployeeService - Retrieving all employees
2025-06-09 12:27:34.536 [Test worker] INFO  c.r.api.service.EmployeeService - Retrieving highest salary of employees
2025-06-09 12:27:34.536 [Test worker] INFO  c.r.api.service.EmployeeService - Retrieving all employees
2025-06-09 12:27:34.537 [Test worker] INFO  c.r.api.service.EmployeeService - Retrieving top 10 highest earning employee names
2025-06-09 12:27:34.538 [Test worker] INFO  c.r.api.service.EmployeeService - Retrieving all employees
2025-06-09 12:27:34.539 [Test worker] INFO  c.r.api.service.EmployeeService - Retrieving employee with ID: 51da61d3-8d85-4fea-a610-aa22a91ead0a
2025-06-09 12:27:34.540 [Test worker] INFO  c.r.api.service.EmployeeService - Searching employees with name containing: 1
2025-06-09 12:27:34.540 [Test worker] INFO  c.r.api.service.EmployeeService - Retrieving all employees
2025-06-09 12:27:34.542 [Test worker] INFO  c.r.api.service.EmployeeService - Deleting employee with ID: 00f75660-dae4-45b8-af0b-b086a7ff2fd7
2025-06-09 12:27:34.542 [Test worker] INFO  c.r.api.service.EmployeeService - Retrieving employee with ID: 00f75660-dae4-45b8-af0b-b086a7ff2fd7
2025-06-09 12:27:34.542 [Test worker] INFO  c.r.api.service.EmployeeService - Successfully deleted employee with ID: 00f75660-dae4-45b8-af0b-b086a7ff2fd7
2025-06-09 12:27:34.543 [Test worker] INFO  c.r.api.service.EmployeeService - Creating new employee: EmployeeInput(name=New Employee, salary=80000, age=28, title=Frontend Developer)
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
